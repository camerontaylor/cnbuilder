{
  "name": "cnbuilder",
  "version": "1.0.12",
  "main": "dist/cnbuilder.js",
  "module": "dist/cnbuilder.esm.js",
  "types": "dist/index.d.ts",
  "description": "Yet another classname string builder",
  "files": [
    "dist"
  ],
  "keywords": [
    "classname",
    "class",
    "classlist",
    "builder",
    "attr",
    "attribute",
    "concat"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/xobotyi/cnbuilder.git"
  },
  "bugs": {
    "url": "https://github.com/xobotyi/cnbuilder/issues"
  },
  "homepage": "https://github.com/xobotyi/cnbuilder",
  "author": "Anton Zinovyev",
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "@babel/core": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@types/jest": "^24.0.12",
    "codacy-coverage": "^3.4.0",
    "husky": "^2.1.0",
    "jest": "^24.7.1",
    "prettier": "^1.17.0",
    "pretty-quick": "^1.10.0",
    "rimraf": "^2.6.3",
    "rollup": "^1.10.1",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-typescript2": "^0.21.0",
    "terser": "^3.17.0",
    "ts-jest": "^24.0.2",
    "typescript": "^3.4.5"
  },
  "scripts": {
    "push-codacy-coverage": "cat ./coverage/lcov.info | codacy-coverage -p .",
    "format": "prettier --write src/**/*.ts tests/**/*.ts benchmark/src/**/*.ts src/**/*.js tests/**/*.js benchmark/src/**/*.js *.js *.ts",
    "build": "rimraf ./dist && rollup --config && npm run minify",
    "minify": "terser ./dist/cnbuilder.js -o ./dist/cnbuilder.js -mc pure_funcs=['Object.defineProperty'] --source-map includeSources,url=cnbuilder.js.map",
    "test": "jest",
    "preversion": "npm run format && npm run build",
    "postversion": "git push && git push --tags",
    "prepublishOnly": "npm run format && npm run test && npm run build"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "transform": {
      "\\.(ts|tsx)$": "ts-jest"
    },
    "testRegex": "/tests/.*\\.spec\\.(ts|tsx)$",
    "coverageDirectory": "./coverage",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts"
    ]
  }
}
